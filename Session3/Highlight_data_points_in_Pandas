{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPr2WIK7+ZxR80EeoAOxL5L"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"n9ZrfS6iDRbE","executionInfo":{"status":"ok","timestamp":1679495019803,"user_tz":-180,"elapsed":572,"user":{"displayName":"Uğur İpekdüzen","userId":"13636982633989872109"}},"outputId":"974f69d0-6953-4e37-d5a0-d718e871d859"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7fa08aaff1f0>"],"text/html":["<style type=\"text/css\">\n","#T_2595b_row0_col1, #T_2595b_row0_col2, #T_2595b_row3_col1, #T_2595b_row3_col2, #T_2595b_row4_col1, #T_2595b_row4_col2 {\n","  background-color: #C4DE6B;\n","  color: white;\n","}\n","#T_2595b_row1_col1, #T_2595b_row1_col2, #T_2595b_row2_col1, #T_2595b_row2_col2 {\n","  background-color: #C4606B;\n","  color: white;\n","}\n","</style>\n","<table id=\"T_2595b\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_2595b_level0_col0\" class=\"col_heading level0 col0\" >Salary</th>\n","      <th id=\"T_2595b_level0_col1\" class=\"col_heading level0 col1\" >Height</th>\n","      <th id=\"T_2595b_level0_col2\" class=\"col_heading level0 col2\" >weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_2595b_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n","      <td id=\"T_2595b_row0_col0\" class=\"data row0 col0\" >100000.200000</td>\n","      <td id=\"T_2595b_row0_col1\" class=\"data row0 col1\" >6.500000</td>\n","      <td id=\"T_2595b_row0_col2\" class=\"data row0 col2\" >185.230000</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_2595b_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n","      <td id=\"T_2595b_row1_col0\" class=\"data row1 col0\" >95000.900000</td>\n","      <td id=\"T_2595b_row1_col1\" class=\"data row1 col1\" >5.200000</td>\n","      <td id=\"T_2595b_row1_col2\" class=\"data row1 col2\" >105.120000</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_2595b_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n","      <td id=\"T_2595b_row2_col0\" class=\"data row2 col0\" >103000.200000</td>\n","      <td id=\"T_2595b_row2_col1\" class=\"data row2 col1\" >5.590000</td>\n","      <td id=\"T_2595b_row2_col2\" class=\"data row2 col2\" >110.300000</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_2595b_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n","      <td id=\"T_2595b_row3_col0\" class=\"data row3 col0\" >65984.100000</td>\n","      <td id=\"T_2595b_row3_col1\" class=\"data row3 col1\" >6.700000</td>\n","      <td id=\"T_2595b_row3_col2\" class=\"data row3 col2\" >190.120000</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_2595b_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n","      <td id=\"T_2595b_row4_col0\" class=\"data row4 col0\" >150987.080000</td>\n","      <td id=\"T_2595b_row4_col1\" class=\"data row4 col1\" >6.920000</td>\n","      <td id=\"T_2595b_row4_col2\" class=\"data row4 col2\" >200.590000</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{},"execution_count":1}],"source":["import pandas as pd\n","\n","my_info = {\n","    \"Salary\": [100000.2, 95000.9, 103000.2, 65984.1, 150987.08], \n","    \"Height\": [6.5, 5.2, 5.59, 6.7, 6.92], \n","    \"weight\": [185.23, 105.12, 110.3, 190.12, 200.59]      \n","}\n","my_data = pd.DataFrame(my_info)\n","\n","\"\"\"\n","Function to highlight min and max\n","\"\"\"\n","\n","def highlight_min_max(data_frame, min_color, max_color):\n","\n","  # This first line create a styler object\n","  final_data = data_frame.style.highlight_max(color = max_color)\n","\n","  # On this second line, no need to use \".style\"\n","  final_data = final_data.highlight_min(color = min_color)\n","\n","  return final_data\n","  \n","# Function to apply ORANGE to min and GREEN to max\n","highlight_min_max(my_data, min_color='orange', max_color='green')"]},{"cell_type":"code","source":["\n","\"\"\"\n","Custom function: apply RED or GREEN whether data is below or above the mean. \n","\"\"\"\n","def highlight_values(data_row):\n","  low_value_color = \"background-color:#C4606B  ; color: white;\"\n","  high_value_color = \"background-color: #C4DE6B; color: white;\"   \n","  filter = data_row < data_row.mean()\n","\n","  return [low_value_color if low_value else high_value_color for low_value in filter]\n","  \n","# Application of my custom function to only 'Height' & 'weight'\n","my_data.style.apply(highlight_values, subset=['Height', 'weight'])"],"metadata":{"id":"qSi-LK-YtOSr","executionInfo":{"status":"ok","timestamp":1679495067480,"user_tz":-180,"elapsed":429,"user":{"displayName":"Uğur İpekdüzen","userId":"13636982633989872109"}},"outputId":"ae4d4be9-d7ff-490b-efea-90fc2c971099","colab":{"base_uri":"https://localhost:8080/","height":206}},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7fa0b4881d00>"],"text/html":["<style type=\"text/css\">\n","#T_a54e8_row0_col1, #T_a54e8_row0_col2, #T_a54e8_row3_col1, #T_a54e8_row3_col2, #T_a54e8_row4_col1, #T_a54e8_row4_col2 {\n","  background-color: #C4DE6B;\n","  color: white;\n","}\n","#T_a54e8_row1_col1, #T_a54e8_row1_col2, #T_a54e8_row2_col1, #T_a54e8_row2_col2 {\n","  background-color: #C4606B;\n","  color: white;\n","}\n","</style>\n","<table id=\"T_a54e8\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_a54e8_level0_col0\" class=\"col_heading level0 col0\" >Salary</th>\n","      <th id=\"T_a54e8_level0_col1\" class=\"col_heading level0 col1\" >Height</th>\n","      <th id=\"T_a54e8_level0_col2\" class=\"col_heading level0 col2\" >weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_a54e8_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n","      <td id=\"T_a54e8_row0_col0\" class=\"data row0 col0\" >100000.200000</td>\n","      <td id=\"T_a54e8_row0_col1\" class=\"data row0 col1\" >6.500000</td>\n","      <td id=\"T_a54e8_row0_col2\" class=\"data row0 col2\" >185.230000</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_a54e8_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n","      <td id=\"T_a54e8_row1_col0\" class=\"data row1 col0\" >95000.900000</td>\n","      <td id=\"T_a54e8_row1_col1\" class=\"data row1 col1\" >5.200000</td>\n","      <td id=\"T_a54e8_row1_col2\" class=\"data row1 col2\" >105.120000</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_a54e8_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n","      <td id=\"T_a54e8_row2_col0\" class=\"data row2 col0\" >103000.200000</td>\n","      <td id=\"T_a54e8_row2_col1\" class=\"data row2 col1\" >5.590000</td>\n","      <td id=\"T_a54e8_row2_col2\" class=\"data row2 col2\" >110.300000</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_a54e8_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n","      <td id=\"T_a54e8_row3_col0\" class=\"data row3 col0\" >65984.100000</td>\n","      <td id=\"T_a54e8_row3_col1\" class=\"data row3 col1\" >6.700000</td>\n","      <td id=\"T_a54e8_row3_col2\" class=\"data row3 col2\" >190.120000</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_a54e8_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n","      <td id=\"T_a54e8_row4_col0\" class=\"data row4 col0\" >150987.080000</td>\n","      <td id=\"T_a54e8_row4_col1\" class=\"data row4 col1\" >6.920000</td>\n","      <td id=\"T_a54e8_row4_col2\" class=\"data row4 col2\" >200.590000</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{},"execution_count":2}]}]}